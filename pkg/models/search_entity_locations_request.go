// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// SearchEntityLocationsRequest search entity locations request
//
// swagger:model SearchEntityLocationsRequest
type SearchEntityLocationsRequest struct {

	// end time
	// Format: date-time
	EndTime strfmt.DateTime `json:"end_time,omitempty"`

	// entity ids
	EntityIds []strfmt.UUID `json:"entity_ids"`

	// start time
	// Format: date-time
	StartTime strfmt.DateTime `json:"start_time,omitempty"`
}

// Validate validates this search entity locations request
func (m *SearchEntityLocationsRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateEndTime(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateEntityIds(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStartTime(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *SearchEntityLocationsRequest) validateEndTime(formats strfmt.Registry) error {
	if swag.IsZero(m.EndTime) { // not required
		return nil
	}

	if err := validate.FormatOf("end_time", "body", "date-time", m.EndTime.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *SearchEntityLocationsRequest) validateEntityIds(formats strfmt.Registry) error {
	if swag.IsZero(m.EntityIds) { // not required
		return nil
	}

	for i := 0; i < len(m.EntityIds); i++ {

		if err := validate.FormatOf("entity_ids"+"."+strconv.Itoa(i), "body", "uuid", m.EntityIds[i].String(), formats); err != nil {
			return err
		}

	}

	return nil
}

func (m *SearchEntityLocationsRequest) validateStartTime(formats strfmt.Registry) error {
	if swag.IsZero(m.StartTime) { // not required
		return nil
	}

	if err := validate.FormatOf("start_time", "body", "date-time", m.StartTime.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this search entity locations request based on context it is used
func (m *SearchEntityLocationsRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *SearchEntityLocationsRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SearchEntityLocationsRequest) UnmarshalBinary(b []byte) error {
	var res SearchEntityLocationsRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
