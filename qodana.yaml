#-------------------------------------------------------------------------------#
#               Qodana analysis is configured by qodana.yaml file               #
#             https://www.jetbrains.com/help/qodana/qodana-yaml.html            #
#-------------------------------------------------------------------------------#
version: "1.0"

#Specify inspection profile for code analysis
profile:
  name: qodana.starter

#Disable common noisy inspections for Go projects
exclude:
  # Unused code inspections (often noisy in large codebases)
  - name: GoUnusedFunction
  - name: GoUnusedParameter
  - name: GoUnusedVariable
  - name: GoUnusedConst
  - name: GoUnusedGlobalVariable
  - name: GoUnusedExportedFunction
  - name: GoUnusedType

  # Naming convention inspections (project-specific preferences)
  - name: GoNamingConvention
  - name: GoNameStartsWithPackageName
  - name: GoSnakeCaseUsage

  # Structure and initialization style preferences
  - name: GoStructInitialization
  - name: GoRedundantConversion
  - name: GoRedundantTypeDeclInReturnStmt

  # Test-related noise (exclude for test files)
  - name: GoTestResultIgnored
    paths:
      - "**/*_test.go"

  # Documentation requirements (often too strict for internal code)
  - name: GoCommentStart
  - name: GoDocCommentIssue

  # Code complexity warnings (subjective thresholds)
  - name: GoComplexFunction
  - name: GoDeepNesting

  # Exclude inspections that overlap with golangci-lint linters
  # These are handled by golangci-lint's govet, gocritic, staticcheck
  - name: GoVetShadow
  - name: GoVetComposites
  - name: GoVetRangeLoops
  - name: GoVetShift
  - name: GoVetAtomicAlignment
  - name: GoVetCopyLocks
  - name: GoVetLostCancel
  - name: GoVetTests
  - name: GoVetUnmarshal
  - name: GoVetUnreachable
  - name: GoVetUnsafePointer

  # Misspelling (commented out in golangci-lint)
  - name: GoMisspelling

  # Inefficient assignments (handled by ineffassign)
  - name: GoIneffectualAssignment

  # Type conversions (handled by unconvert)
  - name: GoUnnecessaryTypeConversion

  # Critical issues (handled by gocritic)
  - name: GoDeprecatedFunction
  - name: GoDeprecatedComment
  - name: All
    paths:
        - pkg/models/org_role.go

#Execute shell command before Qodana execution (Applied in CI/CD pipeline)
#bootstrap: sh ./prepare-qodana.sh

#Install IDE plugins before Qodana execution (Applied in CI/CD pipeline)
#plugins:
#  - id: <plugin.id> #(plugin id can be found at https://plugins.jetbrains.com)

#Specify Qodana linter for analysis (Applied in CI/CD pipeline)
linter: jetbrains/qodana-go:2025.1

# Optional: Set quality gate thresholds
failureConditions:
  severityThresholds:
    any: 100  # Total number of problems allowed
    critical: 0  # No critical issues allowed
    high: 10  # Up to 10 high severity issues
    moderate: 50  # Up to 50 moderate severity issues
  testCoverageThresholds:
    fresh: 80  # Fresh code coverage threshold
    total: 60  # Total code coverage threshold
